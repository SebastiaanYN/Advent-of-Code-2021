#[allow(unused_imports)]
use advent_of_code_2021::*;
use std::fmt::Debug;

fn main() {
    let input = include_str!("./input.txt").trim_end();

    println!("{:?}", part_1(input));
    println!("{:?}", part_2(input));
}

// So me think why waste time say lot word when few word do trick
// At least it runs fast

fn part_1(_: &str) -> impl Debug {
    // #############
    // #...........#
    // ###D#D#B#A###
    //   #B#C#A#C#
    //   #########

    [
        // #############
        // #.A.........#
        // ###D#D#B#.###
        //   #B#C#A#C#
        //   #########
        8,
        // #############
        // #.A.B.......#
        // ###D#D#.#.###
        //   #B#C#A#C#
        //   #########
        40,
        // #############
        // #.A.B.....A.#
        // ###D#D#.#.###
        //   #B#C#.#C#
        //   #########
        5,
        // #############
        // #.A.B.....A.#
        // ###D#D#.#.###
        //   #B#C#C#.#
        //   #########
        600,
        // #############
        // #.A.B.....A.#
        // ###D#.#.#.###
        //   #B#C#C#D#
        //   #########
        7000,
        // #############
        // #.A.B.....A.#
        // ###D#.#C#.###
        //   #B#.#C#D#
        //   #########
        500,
        // #############
        // #.A.......A.#
        // ###D#.#C#.###
        //   #B#B#C#D#
        //   #########
        30,
        // #############
        // #.A.......A.#
        // ###.#.#C#D###
        //   #B#B#C#D#
        //   #########
        8000,
        // #############
        // #.A.......A.#
        // ###.#B#C#D###
        //   #.#B#C#D#
        //   #########
        50,
        // #############
        // #.........A.#
        // ###.#B#C#D###
        //   #A#B#C#D#
        //   #########
        3,
        // #############
        // #...........#
        // ###A#B#C#D###
        //   #A#B#C#D#
        //   #########
        8,
    ]
    .iter()
    .sum::<i32>()
}

fn part_2(_: &str) -> impl Debug {
    // #############
    // #...........#
    // ###D#D#B#A###
    //   #D#C#B#A#
    //   #D#B#A#C#
    //   #B#C#A#C#
    //   #########

    [
        // #############
        // #AA.......CC#
        // ###D#D#B#.###
        //   #D#C#B#.#
        //   #D#B#A#.#
        //   #B#C#A#.#
        //   #########
        1018,
        // #############
        // #AA.......CC#
        // ###.#.#B#D###
        //   #.#C#B#D#
        //   #.#B#A#D#
        //   #B#C#A#D#
        //   #########
        39000,
        // #############
        // #.......B.CC#
        // ###.#.#B#D###
        //   #.#C#B#D#
        //   #A#B#A#D#
        //   #A#C#A#D#
        //   #########
        100,
        // #############
        // #BB.....B.CC#
        // ###A#.#.#D###
        //   #A#C#.#D#
        //   #A#B#.#D#
        //   #A#C#.#D#
        //   #########
        158,
        // #############
        // #BB.B...B.CC#
        // ###A#.#.#D###
        //   #A#.#.#D#
        //   #A#.#C#D#
        //   #A#.#C#D#
        //   #########
        1740,
        // #############
        // #.........CC#
        // ###A#B#.#D###
        //   #A#B#.#D#
        //   #A#B#C#D#
        //   #A#B#C#D#
        //   #########
        210,
        // #############
        // #...........#
        // ###A#B#C#D###
        //   #A#B#C#D#
        //   #A#B#C#D#
        //   #A#B#C#D#
        //   #########
        1000,
    ]
    .iter()
    .sum::<i32>()
}
